//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics.CodeAnalysis;


namespace DashboardApp
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
        private global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace DashboardApp.DashboardApp_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::DashboardApp.DashboardApp_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::DashboardApp.DashboardApp_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;
        
        private void InitTypeTables()
        {
            _typeNameTable = new string[62];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "Windows.UI.Color";
            _typeNameTable[5] = "System.ValueType";
            _typeNameTable[6] = "Byte";
            _typeNameTable[7] = "Microsoft.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[8] = "Microsoft.UI.Xaml.Controls.NavigationViewItemBase";
            _typeNameTable[9] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[10] = "Double";
            _typeNameTable[11] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[12] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[13] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[14] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[15] = "Microsoft.UI.Xaml.Controls.Primitives.ToggleButton";
            _typeNameTable[16] = "DashboardApp.Controls.GlobalLeftSidebar";
            _typeNameTable[17] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[18] = "DashboardApp.ViewModels.ShellViewModel";
            _typeNameTable[19] = "DashboardApp.ViewModels.BaseViewModel";
            _typeNameTable[20] = "Microsoft.UI.Xaml.Controls.DropDownButton";
            _typeNameTable[21] = "Microsoft.UI.Xaml.Controls.Button";
            _typeNameTable[22] = "Microsoft.UI.Xaml.Controls.AutoSuggestBox";
            _typeNameTable[23] = "DashboardApp.Controls.TopNavbar";
            _typeNameTable[24] = "DashboardApp.MainWindow";
            _typeNameTable[25] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[26] = "DashboardApp.Views.ActiveDirectoryPage";
            _typeNameTable[27] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[28] = "DashboardApp.Views.AdComputersPage";
            _typeNameTable[29] = "DashboardApp.Views.AdDomainsPage";
            _typeNameTable[30] = "DashboardApp.Views.AdForestPage";
            _typeNameTable[31] = "DashboardApp.Views.AdGroupsPage";
            _typeNameTable[32] = "DashboardApp.Views.AdUsersPage";
            _typeNameTable[33] = "DashboardApp.Views.AwsEc2Page";
            _typeNameTable[34] = "DashboardApp.Views.AwsHomePage";
            _typeNameTable[35] = "DashboardApp.Views.AwsLambdaPage";
            _typeNameTable[36] = "DashboardApp.Views.AwsRdsPage";
            _typeNameTable[37] = "DashboardApp.Views.AwsS3Page";
            _typeNameTable[38] = "DashboardApp.Views.AzureFunctionsPage";
            _typeNameTable[39] = "DashboardApp.Views.AzureHomePage";
            _typeNameTable[40] = "DashboardApp.Views.AzureSqlPage";
            _typeNameTable[41] = "DashboardApp.Views.AzureStoragePage";
            _typeNameTable[42] = "DashboardApp.Views.AzureVmsPage";
            _typeNameTable[43] = "DashboardApp.Views.DashboardAnalyticsPage";
            _typeNameTable[44] = "DashboardApp.Views.DashboardOverviewPage";
            _typeNameTable[45] = "DashboardApp.Views.ForensicsAnalysisPage";
            _typeNameTable[46] = "DashboardApp.Views.ForensicsCasesPage";
            _typeNameTable[47] = "DashboardApp.Views.ForensicsEvidencePage";
            _typeNameTable[48] = "DashboardApp.Views.ForensicsHomePage";
            _typeNameTable[49] = "DashboardApp.Views.ForensicsReportsPage";
            _typeNameTable[50] = "DashboardApp.Views.HomePage";
            _typeNameTable[51] = "DashboardApp.Views.ShellPage";
            _typeNameTable[52] = "Microsoft.UI.Xaml.Controls.ProgressRing";
            _typeNameTable[53] = "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings";
            _typeNameTable[54] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[55] = "Microsoft.UI.Xaml.Controls.ProgressBar";
            _typeNameTable[56] = "Microsoft.UI.Xaml.Controls.Primitives.RangeBase";
            _typeNameTable[57] = "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings";
            _typeNameTable[58] = "DashboardApp.Views.SplashScreenPage";
            _typeNameTable[59] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[60] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";
            _typeNameTable[61] = "Int32";

            _typeTable = new global::System.Type[62];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::Windows.UI.Color);
            _typeTable[5] = typeof(global::System.ValueType);
            _typeTable[6] = typeof(global::System.Byte);
            _typeTable[7] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[8] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase);
            _typeTable[9] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[10] = typeof(global::System.Double);
            _typeTable[11] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[12] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[13] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[14] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[15] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton);
            _typeTable[16] = typeof(global::DashboardApp.Controls.GlobalLeftSidebar);
            _typeTable[17] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[18] = typeof(global::DashboardApp.ViewModels.ShellViewModel);
            _typeTable[19] = typeof(global::DashboardApp.ViewModels.BaseViewModel);
            _typeTable[20] = typeof(global::Microsoft.UI.Xaml.Controls.DropDownButton);
            _typeTable[21] = typeof(global::Microsoft.UI.Xaml.Controls.Button);
            _typeTable[22] = typeof(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox);
            _typeTable[23] = typeof(global::DashboardApp.Controls.TopNavbar);
            _typeTable[24] = typeof(global::DashboardApp.MainWindow);
            _typeTable[25] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[26] = typeof(global::DashboardApp.Views.ActiveDirectoryPage);
            _typeTable[27] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[28] = typeof(global::DashboardApp.Views.AdComputersPage);
            _typeTable[29] = typeof(global::DashboardApp.Views.AdDomainsPage);
            _typeTable[30] = typeof(global::DashboardApp.Views.AdForestPage);
            _typeTable[31] = typeof(global::DashboardApp.Views.AdGroupsPage);
            _typeTable[32] = typeof(global::DashboardApp.Views.AdUsersPage);
            _typeTable[33] = typeof(global::DashboardApp.Views.AwsEc2Page);
            _typeTable[34] = typeof(global::DashboardApp.Views.AwsHomePage);
            _typeTable[35] = typeof(global::DashboardApp.Views.AwsLambdaPage);
            _typeTable[36] = typeof(global::DashboardApp.Views.AwsRdsPage);
            _typeTable[37] = typeof(global::DashboardApp.Views.AwsS3Page);
            _typeTable[38] = typeof(global::DashboardApp.Views.AzureFunctionsPage);
            _typeTable[39] = typeof(global::DashboardApp.Views.AzureHomePage);
            _typeTable[40] = typeof(global::DashboardApp.Views.AzureSqlPage);
            _typeTable[41] = typeof(global::DashboardApp.Views.AzureStoragePage);
            _typeTable[42] = typeof(global::DashboardApp.Views.AzureVmsPage);
            _typeTable[43] = typeof(global::DashboardApp.Views.DashboardAnalyticsPage);
            _typeTable[44] = typeof(global::DashboardApp.Views.DashboardOverviewPage);
            _typeTable[45] = typeof(global::DashboardApp.Views.ForensicsAnalysisPage);
            _typeTable[46] = typeof(global::DashboardApp.Views.ForensicsCasesPage);
            _typeTable[47] = typeof(global::DashboardApp.Views.ForensicsEvidencePage);
            _typeTable[48] = typeof(global::DashboardApp.Views.ForensicsHomePage);
            _typeTable[49] = typeof(global::DashboardApp.Views.ForensicsReportsPage);
            _typeTable[50] = typeof(global::DashboardApp.Views.HomePage);
            _typeTable[51] = typeof(global::DashboardApp.Views.ShellPage);
            _typeTable[52] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing);
            _typeTable[53] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings);
            _typeTable[54] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[55] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar);
            _typeTable[56] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase);
            _typeTable[57] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings);
            _typeTable[58] = typeof(global::DashboardApp.Views.SplashScreenPage);
            _typeTable[59] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[60] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
            _typeTable[61] = typeof(global::System.Int32);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_7_NavigationViewItem() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItem(); }
        private object Activate_12_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_16_GlobalLeftSidebar() { return new global::DashboardApp.Controls.GlobalLeftSidebar(); }
        private object Activate_18_ShellViewModel() { return new global::DashboardApp.ViewModels.ShellViewModel(); }
        private object Activate_20_DropDownButton() { return new global::Microsoft.UI.Xaml.Controls.DropDownButton(); }
        private object Activate_23_TopNavbar() { return new global::DashboardApp.Controls.TopNavbar(); }
        private object Activate_24_MainWindow() { return new global::DashboardApp.MainWindow(); }
        private object Activate_26_ActiveDirectoryPage() { return new global::DashboardApp.Views.ActiveDirectoryPage(); }
        private object Activate_28_AdComputersPage() { return new global::DashboardApp.Views.AdComputersPage(); }
        private object Activate_29_AdDomainsPage() { return new global::DashboardApp.Views.AdDomainsPage(); }
        private object Activate_30_AdForestPage() { return new global::DashboardApp.Views.AdForestPage(); }
        private object Activate_31_AdGroupsPage() { return new global::DashboardApp.Views.AdGroupsPage(); }
        private object Activate_32_AdUsersPage() { return new global::DashboardApp.Views.AdUsersPage(); }
        private object Activate_33_AwsEc2Page() { return new global::DashboardApp.Views.AwsEc2Page(); }
        private object Activate_34_AwsHomePage() { return new global::DashboardApp.Views.AwsHomePage(); }
        private object Activate_35_AwsLambdaPage() { return new global::DashboardApp.Views.AwsLambdaPage(); }
        private object Activate_36_AwsRdsPage() { return new global::DashboardApp.Views.AwsRdsPage(); }
        private object Activate_37_AwsS3Page() { return new global::DashboardApp.Views.AwsS3Page(); }
        private object Activate_38_AzureFunctionsPage() { return new global::DashboardApp.Views.AzureFunctionsPage(); }
        private object Activate_39_AzureHomePage() { return new global::DashboardApp.Views.AzureHomePage(); }
        private object Activate_40_AzureSqlPage() { return new global::DashboardApp.Views.AzureSqlPage(); }
        private object Activate_41_AzureStoragePage() { return new global::DashboardApp.Views.AzureStoragePage(); }
        private object Activate_42_AzureVmsPage() { return new global::DashboardApp.Views.AzureVmsPage(); }
        private object Activate_43_DashboardAnalyticsPage() { return new global::DashboardApp.Views.DashboardAnalyticsPage(); }
        private object Activate_44_DashboardOverviewPage() { return new global::DashboardApp.Views.DashboardOverviewPage(); }
        private object Activate_45_ForensicsAnalysisPage() { return new global::DashboardApp.Views.ForensicsAnalysisPage(); }
        private object Activate_46_ForensicsCasesPage() { return new global::DashboardApp.Views.ForensicsCasesPage(); }
        private object Activate_47_ForensicsEvidencePage() { return new global::DashboardApp.Views.ForensicsEvidencePage(); }
        private object Activate_48_ForensicsHomePage() { return new global::DashboardApp.Views.ForensicsHomePage(); }
        private object Activate_49_ForensicsReportsPage() { return new global::DashboardApp.Views.ForensicsReportsPage(); }
        private object Activate_50_HomePage() { return new global::DashboardApp.Views.HomePage(); }
        private object Activate_51_ShellPage() { return new global::DashboardApp.Views.ShellPage(); }
        private object Activate_52_ProgressRing() { return new global::Microsoft.UI.Xaml.Controls.ProgressRing(); }
        private object Activate_55_ProgressBar() { return new global::Microsoft.UI.Xaml.Controls.ProgressBar(); }
        private object Activate_58_SplashScreenPage() { return new global::DashboardApp.Views.SplashScreenPage(); }
        private object Activate_59_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private void StaticInitializer_0_XamlControlsResources() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources).TypeHandle);
        private void StaticInitializer_4_Color() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.UI.Color).TypeHandle);
        private void StaticInitializer_5_ValueType() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.ValueType).TypeHandle);
        private void StaticInitializer_6_Byte() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Byte).TypeHandle);
        private void StaticInitializer_7_NavigationViewItem() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem).TypeHandle);
        private void StaticInitializer_8_NavigationViewItemBase() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase).TypeHandle);
        private void StaticInitializer_12_InfoBadge() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge).TypeHandle);
        private void StaticInitializer_14_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::System.Object>).TypeHandle);
        private void StaticInitializer_16_GlobalLeftSidebar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Controls.GlobalLeftSidebar).TypeHandle);
        private void StaticInitializer_18_ShellViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.ViewModels.ShellViewModel).TypeHandle);
        private void StaticInitializer_19_BaseViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.ViewModels.BaseViewModel).TypeHandle);
        private void StaticInitializer_20_DropDownButton() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.DropDownButton).TypeHandle);
        private void StaticInitializer_23_TopNavbar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Controls.TopNavbar).TypeHandle);
        private void StaticInitializer_24_MainWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.MainWindow).TypeHandle);
        private void StaticInitializer_26_ActiveDirectoryPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.ActiveDirectoryPage).TypeHandle);
        private void StaticInitializer_28_AdComputersPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AdComputersPage).TypeHandle);
        private void StaticInitializer_29_AdDomainsPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AdDomainsPage).TypeHandle);
        private void StaticInitializer_30_AdForestPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AdForestPage).TypeHandle);
        private void StaticInitializer_31_AdGroupsPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AdGroupsPage).TypeHandle);
        private void StaticInitializer_32_AdUsersPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AdUsersPage).TypeHandle);
        private void StaticInitializer_33_AwsEc2Page() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AwsEc2Page).TypeHandle);
        private void StaticInitializer_34_AwsHomePage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AwsHomePage).TypeHandle);
        private void StaticInitializer_35_AwsLambdaPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AwsLambdaPage).TypeHandle);
        private void StaticInitializer_36_AwsRdsPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AwsRdsPage).TypeHandle);
        private void StaticInitializer_37_AwsS3Page() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AwsS3Page).TypeHandle);
        private void StaticInitializer_38_AzureFunctionsPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AzureFunctionsPage).TypeHandle);
        private void StaticInitializer_39_AzureHomePage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AzureHomePage).TypeHandle);
        private void StaticInitializer_40_AzureSqlPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AzureSqlPage).TypeHandle);
        private void StaticInitializer_41_AzureStoragePage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AzureStoragePage).TypeHandle);
        private void StaticInitializer_42_AzureVmsPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.AzureVmsPage).TypeHandle);
        private void StaticInitializer_43_DashboardAnalyticsPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.DashboardAnalyticsPage).TypeHandle);
        private void StaticInitializer_44_DashboardOverviewPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.DashboardOverviewPage).TypeHandle);
        private void StaticInitializer_45_ForensicsAnalysisPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.ForensicsAnalysisPage).TypeHandle);
        private void StaticInitializer_46_ForensicsCasesPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.ForensicsCasesPage).TypeHandle);
        private void StaticInitializer_47_ForensicsEvidencePage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.ForensicsEvidencePage).TypeHandle);
        private void StaticInitializer_48_ForensicsHomePage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.ForensicsHomePage).TypeHandle);
        private void StaticInitializer_49_ForensicsReportsPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.ForensicsReportsPage).TypeHandle);
        private void StaticInitializer_50_HomePage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.HomePage).TypeHandle);
        private void StaticInitializer_51_ShellPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.ShellPage).TypeHandle);
        private void StaticInitializer_52_ProgressRing() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing).TypeHandle);
        private void StaticInitializer_53_ProgressRingTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings).TypeHandle);
        private void StaticInitializer_55_ProgressBar() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar).TypeHandle);
        private void StaticInitializer_57_ProgressBarTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings).TypeHandle);
        private void StaticInitializer_58_SplashScreenPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::DashboardApp.Views.SplashScreenPage).TypeHandle);
        private void StaticInitializer_59_TreeViewNode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode).TypeHandle);
        private void StaticInitializer_60_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>).TypeHandle);
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_14_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_60_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.StaticInitializer = StaticInitializer_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Windows.UI.Color
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_4_Color;
                userType.AddMemberName("A");
                userType.AddMemberName("R");
                userType.AddMemberName("G");
                userType.AddMemberName("B");
                xamlType = userType;
                break;

            case 5:   //  System.ValueType
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_5_ValueType;
                xamlType = userType;
                break;

            case 6:   //  Byte
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_6_Byte;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  Microsoft.UI.Xaml.Controls.NavigationViewItem
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_7_NavigationViewItem;
                userType.StaticInitializer = StaticInitializer_7_NavigationViewItem;
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("Icon");
                userType.AddMemberName("InfoBadge");
                userType.AddMemberName("IsChildSelected");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("SelectsOnInvoked");
                xamlType = userType;
                break;

            case 8:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.StaticInitializer = StaticInitializer_8_NavigationViewItemBase;
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 9:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Double
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.StaticInitializer = StaticInitializer_12_InfoBadge;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_14_IList;
                userType.CollectionAdd = VectorAdd_14_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 15:   //  Microsoft.UI.Xaml.Controls.Primitives.ToggleButton
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  DashboardApp.Controls.GlobalLeftSidebar
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_16_GlobalLeftSidebar;
                userType.StaticInitializer = StaticInitializer_16_GlobalLeftSidebar;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  DashboardApp.ViewModels.ShellViewModel
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("DashboardApp.ViewModels.BaseViewModel"));
                userType.StaticInitializer = StaticInitializer_18_ShellViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  DashboardApp.ViewModels.BaseViewModel
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_19_BaseViewModel;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  Microsoft.UI.Xaml.Controls.DropDownButton
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Button"));
                userType.Activator = Activate_20_DropDownButton;
                userType.StaticInitializer = StaticInitializer_20_DropDownButton;
                xamlType = userType;
                break;

            case 21:   //  Microsoft.UI.Xaml.Controls.Button
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Microsoft.UI.Xaml.Controls.AutoSuggestBox
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  DashboardApp.Controls.TopNavbar
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_23_TopNavbar;
                userType.StaticInitializer = StaticInitializer_23_TopNavbar;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  DashboardApp.MainWindow
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_24_MainWindow;
                userType.StaticInitializer = StaticInitializer_24_MainWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  DashboardApp.Views.ActiveDirectoryPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_ActiveDirectoryPage;
                userType.StaticInitializer = StaticInitializer_26_ActiveDirectoryPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  DashboardApp.Views.AdComputersPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_28_AdComputersPage;
                userType.StaticInitializer = StaticInitializer_28_AdComputersPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  DashboardApp.Views.AdDomainsPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_29_AdDomainsPage;
                userType.StaticInitializer = StaticInitializer_29_AdDomainsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  DashboardApp.Views.AdForestPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_AdForestPage;
                userType.StaticInitializer = StaticInitializer_30_AdForestPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  DashboardApp.Views.AdGroupsPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_AdGroupsPage;
                userType.StaticInitializer = StaticInitializer_31_AdGroupsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  DashboardApp.Views.AdUsersPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_AdUsersPage;
                userType.StaticInitializer = StaticInitializer_32_AdUsersPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  DashboardApp.Views.AwsEc2Page
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_AwsEc2Page;
                userType.StaticInitializer = StaticInitializer_33_AwsEc2Page;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  DashboardApp.Views.AwsHomePage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_AwsHomePage;
                userType.StaticInitializer = StaticInitializer_34_AwsHomePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  DashboardApp.Views.AwsLambdaPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_AwsLambdaPage;
                userType.StaticInitializer = StaticInitializer_35_AwsLambdaPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  DashboardApp.Views.AwsRdsPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_36_AwsRdsPage;
                userType.StaticInitializer = StaticInitializer_36_AwsRdsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  DashboardApp.Views.AwsS3Page
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_AwsS3Page;
                userType.StaticInitializer = StaticInitializer_37_AwsS3Page;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  DashboardApp.Views.AzureFunctionsPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_AzureFunctionsPage;
                userType.StaticInitializer = StaticInitializer_38_AzureFunctionsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  DashboardApp.Views.AzureHomePage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_AzureHomePage;
                userType.StaticInitializer = StaticInitializer_39_AzureHomePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  DashboardApp.Views.AzureSqlPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_40_AzureSqlPage;
                userType.StaticInitializer = StaticInitializer_40_AzureSqlPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  DashboardApp.Views.AzureStoragePage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_41_AzureStoragePage;
                userType.StaticInitializer = StaticInitializer_41_AzureStoragePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  DashboardApp.Views.AzureVmsPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_42_AzureVmsPage;
                userType.StaticInitializer = StaticInitializer_42_AzureVmsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  DashboardApp.Views.DashboardAnalyticsPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_43_DashboardAnalyticsPage;
                userType.StaticInitializer = StaticInitializer_43_DashboardAnalyticsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  DashboardApp.Views.DashboardOverviewPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_44_DashboardOverviewPage;
                userType.StaticInitializer = StaticInitializer_44_DashboardOverviewPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  DashboardApp.Views.ForensicsAnalysisPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_45_ForensicsAnalysisPage;
                userType.StaticInitializer = StaticInitializer_45_ForensicsAnalysisPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  DashboardApp.Views.ForensicsCasesPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_46_ForensicsCasesPage;
                userType.StaticInitializer = StaticInitializer_46_ForensicsCasesPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  DashboardApp.Views.ForensicsEvidencePage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_47_ForensicsEvidencePage;
                userType.StaticInitializer = StaticInitializer_47_ForensicsEvidencePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  DashboardApp.Views.ForensicsHomePage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_48_ForensicsHomePage;
                userType.StaticInitializer = StaticInitializer_48_ForensicsHomePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  DashboardApp.Views.ForensicsReportsPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_49_ForensicsReportsPage;
                userType.StaticInitializer = StaticInitializer_49_ForensicsReportsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  DashboardApp.Views.HomePage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_50_HomePage;
                userType.StaticInitializer = StaticInitializer_50_HomePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 51:   //  DashboardApp.Views.ShellPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_51_ShellPage;
                userType.StaticInitializer = StaticInitializer_51_ShellPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  Microsoft.UI.Xaml.Controls.ProgressRing
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_52_ProgressRing;
                userType.StaticInitializer = StaticInitializer_52_ProgressRing;
                userType.AddMemberName("IsActive");
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("TemplateSettings");
                userType.AddMemberName("Value");
                xamlType = userType;
                break;

            case 53:   //  Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_53_ProgressRingTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 54:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 55:   //  Microsoft.UI.Xaml.Controls.ProgressBar
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.RangeBase"));
                userType.Activator = Activate_55_ProgressBar;
                userType.StaticInitializer = StaticInitializer_55_ProgressBar;
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("ShowError");
                userType.AddMemberName("ShowPaused");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 56:   //  Microsoft.UI.Xaml.Controls.Primitives.RangeBase
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 57:   //  Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_57_ProgressBarTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 58:   //  DashboardApp.Views.SplashScreenPage
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_58_SplashScreenPage;
                userType.StaticInitializer = StaticInitializer_58_SplashScreenPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 59:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_59_TreeViewNode;
                userType.StaticInitializer = StaticInitializer_59_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 60:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_60_IList;
                userType.CollectionAdd = VectorAdd_60_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 61:   //  Int32
                xamlType = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_1_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_2_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_2_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_3_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_3_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_4_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_4_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_5_NavigationViewItem_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.CompactPaneLength;
        }
        private object get_6_NavigationViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_6_NavigationViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_7_NavigationViewItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.Icon;
        }
        private void set_7_NavigationViewItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_8_NavigationViewItem_InfoBadge(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.InfoBadge;
        }
        private void set_8_NavigationViewItem_InfoBadge(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.InfoBadge = (global::Microsoft.UI.Xaml.Controls.InfoBadge)Value;
        }
        private object get_9_NavigationViewItem_IsChildSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsChildSelected;
        }
        private void set_9_NavigationViewItem_IsChildSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsChildSelected = (global::System.Boolean)Value;
        }
        private object get_10_NavigationViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsExpanded;
        }
        private void set_10_NavigationViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_11_NavigationViewItem_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItems;
        }
        private object get_12_NavigationViewItem_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItemsSource;
        }
        private void set_12_NavigationViewItem_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_13_NavigationViewItem_SelectsOnInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.SelectsOnInvoked;
        }
        private void set_13_NavigationViewItem_SelectsOnInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.SelectsOnInvoked = (global::System.Boolean)Value;
        }
        private object get_14_NavigationViewItemBase_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            return that.IsSelected;
        }
        private void set_14_NavigationViewItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_15_GlobalLeftSidebar_ViewModel(object instance)
        {
            var that = (global::DashboardApp.Controls.GlobalLeftSidebar)instance;
            return that.ViewModel;
        }
        private void set_15_GlobalLeftSidebar_ViewModel(object instance, object Value)
        {
            var that = (global::DashboardApp.Controls.GlobalLeftSidebar)instance;
            that.ViewModel = (global::DashboardApp.ViewModels.ShellViewModel)Value;
        }
        private object get_16_TopNavbar_ViewModel(object instance)
        {
            var that = (global::DashboardApp.Controls.TopNavbar)instance;
            return that.ViewModel;
        }
        private void set_16_TopNavbar_ViewModel(object instance, object Value)
        {
            var that = (global::DashboardApp.Controls.TopNavbar)instance;
            that.ViewModel = (global::DashboardApp.ViewModels.ShellViewModel)Value;
        }
        private object get_17_ShellPage_ViewModel(object instance)
        {
            var that = (global::DashboardApp.Views.ShellPage)instance;
            return that.ViewModel;
        }
        private object get_18_ProgressRing_IsActive(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsActive;
        }
        private void set_18_ProgressRing_IsActive(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_19_ProgressRing_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsIndeterminate;
        }
        private void set_19_ProgressRing_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_20_ProgressRing_Maximum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Maximum;
        }
        private void set_20_ProgressRing_Maximum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_21_ProgressRing_Minimum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Minimum;
        }
        private void set_21_ProgressRing_Minimum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_22_ProgressRing_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.TemplateSettings;
        }
        private object get_23_ProgressRing_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Value;
        }
        private void set_23_ProgressRing_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_24_ProgressBar_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.IsIndeterminate;
        }
        private void set_24_ProgressBar_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_25_ProgressBar_ShowError(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowError;
        }
        private void set_25_ProgressBar_ShowError(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowError = (global::System.Boolean)Value;
        }
        private object get_26_ProgressBar_ShowPaused(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowPaused;
        }
        private void set_26_ProgressBar_ShowPaused(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowPaused = (global::System.Boolean)Value;
        }
        private object get_27_ProgressBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.TemplateSettings;
        }
        private object get_28_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_29_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_29_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_30_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_31_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_32_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_32_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_33_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_33_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_34_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember xamlMember = null;
            global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "Windows.UI.Color.A":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_1_Color_A;
                xamlMember.Setter = set_1_Color_A;
                break;
            case "Windows.UI.Color.R":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_2_Color_R;
                xamlMember.Setter = set_2_Color_R;
                break;
            case "Windows.UI.Color.G":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_3_Color_G;
                xamlMember.Setter = set_3_Color_G;
                break;
            case "Windows.UI.Color.B":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_4_Color_B;
                xamlMember.Setter = set_4_Color_B;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_NavigationViewItem_CompactPaneLength;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.HasUnrealizedChildren":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_NavigationViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_6_NavigationViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_NavigationViewItem_Icon;
                xamlMember.Setter = set_7_NavigationViewItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.InfoBadge":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "InfoBadge", "Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_NavigationViewItem_InfoBadge;
                xamlMember.Setter = set_8_NavigationViewItem_InfoBadge;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsChildSelected":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "IsChildSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_NavigationViewItem_IsChildSelected;
                xamlMember.Setter = set_9_NavigationViewItem_IsChildSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsExpanded":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_NavigationViewItem_IsExpanded;
                xamlMember.Setter = set_10_NavigationViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItems":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_NavigationViewItem_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItemsSource":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_NavigationViewItem_MenuItemsSource;
                xamlMember.Setter = set_12_NavigationViewItem_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "SelectsOnInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_NavigationViewItem_SelectsOnInvoked;
                xamlMember.Setter = set_13_NavigationViewItem_SelectsOnInvoked;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItemBase.IsSelected":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_NavigationViewItemBase_IsSelected;
                xamlMember.Setter = set_14_NavigationViewItemBase_IsSelected;
                break;
            case "DashboardApp.Controls.GlobalLeftSidebar.ViewModel":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DashboardApp.Controls.GlobalLeftSidebar");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "ViewModel", "DashboardApp.ViewModels.ShellViewModel");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_GlobalLeftSidebar_ViewModel;
                xamlMember.Setter = set_15_GlobalLeftSidebar_ViewModel;
                break;
            case "DashboardApp.Controls.TopNavbar.ViewModel":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DashboardApp.Controls.TopNavbar");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "ViewModel", "DashboardApp.ViewModels.ShellViewModel");
                xamlMember.Getter = get_16_TopNavbar_ViewModel;
                xamlMember.Setter = set_16_TopNavbar_ViewModel;
                break;
            case "DashboardApp.Views.ShellPage.ViewModel":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DashboardApp.Views.ShellPage");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "ViewModel", "DashboardApp.ViewModels.ShellViewModel");
                xamlMember.Getter = get_17_ShellPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsActive":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_ProgressRing_IsActive;
                xamlMember.Setter = set_18_ProgressRing_IsActive;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsIndeterminate":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_ProgressRing_IsIndeterminate;
                xamlMember.Setter = set_19_ProgressRing_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Maximum":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_ProgressRing_Maximum;
                xamlMember.Setter = set_20_ProgressRing_Maximum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Minimum":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_ProgressRing_Minimum;
                xamlMember.Setter = set_21_ProgressRing_Minimum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.TemplateSettings":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings");
                xamlMember.Getter = get_22_ProgressRing_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Value":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_ProgressRing_Value;
                xamlMember.Setter = set_23_ProgressRing_Value;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.IsIndeterminate":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_ProgressBar_IsIndeterminate;
                xamlMember.Setter = set_24_ProgressBar_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowError":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "ShowError", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_ProgressBar_ShowError;
                xamlMember.Setter = set_25_ProgressBar_ShowError;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowPaused":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "ShowPaused", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_ProgressBar_ShowPaused;
                xamlMember.Setter = set_26_ProgressBar_ShowPaused;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.TemplateSettings":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings");
                xamlMember.Getter = get_27_ProgressBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_28_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_TreeViewNode_Content;
                xamlMember.Setter = set_29_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_32_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_32_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_33_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::DashboardApp.DashboardApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DashboardApp.DashboardApp_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_34_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, 
            global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void StaticInitializer();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlUserType : global::DashboardApp.DashboardApp_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::DashboardApp.DashboardApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::DashboardApp.DashboardApp_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, 
            global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            StaticInitializer();
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return global::System.Convert.ChangeType(value, global::System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public StaticInitializer StaticInitializer { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::DashboardApp.DashboardApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::DashboardApp.DashboardApp_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

