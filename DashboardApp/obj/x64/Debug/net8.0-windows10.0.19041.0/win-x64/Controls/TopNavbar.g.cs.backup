#pragma checksum "D:\androidprojects\DashboardApp\DashboardApp\Controls\TopNavbar.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "06D5F012538F5F70FA7E1F08D4409CD691F9B82E779FE12BCE72B96C209423E7"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DashboardApp.Controls
{
    partial class TopNavbar : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_AutoSuggestBox_Text(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class TopNavbar_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ITopNavbar_Bindings
        {
            private global::DashboardApp.Controls.TopNavbar dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.AutoSuggestBox obj45;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj45TextDisabled = false;

            private TopNavbar_obj1_BindingsTracking bindingsTracking;

            public TopNavbar_obj1_Bindings()
            {
                this.bindingsTracking = new TopNavbar_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 153 && columnNumber == 29)
                {
                    isobj45TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 45: // Controls\TopNavbar.xaml line 149
                        this.obj45 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_45(this.obj45);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ITopNavbar_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::DashboardApp.Controls.TopNavbar>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::DashboardApp.Controls.TopNavbar obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::DashboardApp.ViewModels.ShellViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_TopSearchQuery(obj.TopSearchQuery, phase);
                    }
                }
            }
            private void Update_ViewModel_TopSearchQuery(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Controls\TopNavbar.xaml line 149
                    if (!isobj45TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_AutoSuggestBox_Text(this.obj45, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_45_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.TopSearchQuery = this.obj45.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class TopNavbar_obj1_BindingsTracking
            {
                private global::System.WeakReference<TopNavbar_obj1_Bindings> weakRefToBindingObj; 

                public TopNavbar_obj1_BindingsTracking(TopNavbar_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<TopNavbar_obj1_Bindings>(obj);
                }

                public TopNavbar_obj1_Bindings TryGetBindingObject()
                {
                    TopNavbar_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    TopNavbar_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::DashboardApp.ViewModels.ShellViewModel obj = sender as global::DashboardApp.ViewModels.ShellViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_TopSearchQuery(obj.TopSearchQuery, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "TopSearchQuery":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TopSearchQuery(obj.TopSearchQuery, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::DashboardApp.ViewModels.ShellViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::DashboardApp.ViewModels.ShellViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_45(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_45_Text();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 17: // Controls\TopNavbar.xaml line 226
                {
                    this.DashboardDropdown = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.DropDownButton>(target);
                }
                break;
            case 18: // Controls\TopNavbar.xaml line 247
                {
                    this.ActiveDirectoryDropdown = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.DropDownButton>(target);
                }
                break;
            case 19: // Controls\TopNavbar.xaml line 288
                {
                    this.AwsDropdown = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.DropDownButton>(target);
                }
                break;
            case 20: // Controls\TopNavbar.xaml line 324
                {
                    this.AzureDropdown = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.DropDownButton>(target);
                }
                break;
            case 21: // Controls\TopNavbar.xaml line 360
                {
                    this.ForensicsDropdown = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.DropDownButton>(target);
                }
                break;
            case 22: // Controls\TopNavbar.xaml line 367
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element22 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element22).Click += this.OnMenuItemClick;
                }
                break;
            case 23: // Controls\TopNavbar.xaml line 372
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element23 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element23).Click += this.OnMenuItemClick;
                }
                break;
            case 24: // Controls\TopNavbar.xaml line 377
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element24 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element24).Click += this.OnMenuItemClick;
                }
                break;
            case 25: // Controls\TopNavbar.xaml line 382
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element25 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element25).Click += this.OnMenuItemClick;
                }
                break;
            case 26: // Controls\TopNavbar.xaml line 387
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element26 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element26).Click += this.OnMenuItemClick;
                }
                break;
            case 27: // Controls\TopNavbar.xaml line 331
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element27 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element27).Click += this.OnMenuItemClick;
                }
                break;
            case 28: // Controls\TopNavbar.xaml line 336
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element28 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element28).Click += this.OnMenuItemClick;
                }
                break;
            case 29: // Controls\TopNavbar.xaml line 341
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element29 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element29).Click += this.OnMenuItemClick;
                }
                break;
            case 30: // Controls\TopNavbar.xaml line 346
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element30 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element30).Click += this.OnMenuItemClick;
                }
                break;
            case 31: // Controls\TopNavbar.xaml line 351
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element31 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element31).Click += this.OnMenuItemClick;
                }
                break;
            case 32: // Controls\TopNavbar.xaml line 295
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element32 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element32).Click += this.OnMenuItemClick;
                }
                break;
            case 33: // Controls\TopNavbar.xaml line 300
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element33 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element33).Click += this.OnMenuItemClick;
                }
                break;
            case 34: // Controls\TopNavbar.xaml line 305
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element34 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element34).Click += this.OnMenuItemClick;
                }
                break;
            case 35: // Controls\TopNavbar.xaml line 310
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element35 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element35).Click += this.OnMenuItemClick;
                }
                break;
            case 36: // Controls\TopNavbar.xaml line 315
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element36 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element36).Click += this.OnMenuItemClick;
                }
                break;
            case 37: // Controls\TopNavbar.xaml line 254
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element37 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element37).Click += this.OnMenuItemClick;
                }
                break;
            case 38: // Controls\TopNavbar.xaml line 259
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element38 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element38).Click += this.OnMenuItemClick;
                }
                break;
            case 39: // Controls\TopNavbar.xaml line 264
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element39 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element39).Click += this.OnMenuItemClick;
                }
                break;
            case 40: // Controls\TopNavbar.xaml line 269
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element40 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element40).Click += this.OnMenuItemClick;
                }
                break;
            case 41: // Controls\TopNavbar.xaml line 274
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element41 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element41).Click += this.OnMenuItemClick;
                }
                break;
            case 42: // Controls\TopNavbar.xaml line 279
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element42 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element42).Click += this.OnMenuItemClick;
                }
                break;
            case 43: // Controls\TopNavbar.xaml line 233
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element43 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element43).Click += this.OnMenuItemClick;
                }
                break;
            case 44: // Controls\TopNavbar.xaml line 238
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element44 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element44).Click += this.OnMenuItemClick;
                }
                break;
            case 46: // Controls\TopNavbar.xaml line 179
                {
                    this.UserDropdown = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.DropDownButton>(target);
                }
                break;
            case 47: // Controls\TopNavbar.xaml line 185
                {
                    this.UserMenuFlyout = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyout>(target);
                }
                break;
            case 48: // Controls\TopNavbar.xaml line 188
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element48 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element48).Click += this.OnUserMenuClick;
                }
                break;
            case 49: // Controls\TopNavbar.xaml line 193
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element49 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element49).Click += this.OnUserMenuClick;
                }
                break;
            case 50: // Controls\TopNavbar.xaml line 198
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element50 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element50).Click += this.OnUserMenuClick;
                }
                break;
            case 51: // Controls\TopNavbar.xaml line 204
                {
                    global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem element51 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)element51).Click += this.OnUserMenuClick;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2509")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Controls\TopNavbar.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    TopNavbar_obj1_Bindings bindings = new TopNavbar_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

